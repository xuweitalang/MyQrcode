apply plugin: 'com.android.library'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.google.zxing:core:3.3.3'
}

task clearJar(type: Delete) {
    delete 'build/QrcodeJar.jar' //jar包的名字，随便命名
}
task makeJar(type: Jar) {
    //指定生成的jar名
    baseName 'QrcodeJar'
    //从哪里打包class文件
    from('build/intermediates/bundles/default/')
    //打包到jar后的目录结构
    into('build/')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'R.class')
    //去掉R开头的文件
    exclude { it.name.startsWith('R') }
}
makeJar.dependsOn(clearJar, build)




